using UnityEngine;
using UnityEngine.UI; // Для работы с UI

public class PlayerController : MonoBehaviour
{
    public GameObject bulletPrefab; // Префаб пули
    public Transform bulletSpawnPoint; // Точка, откуда вылетают пули
    public float bulletSpeed = 10f; // Скорость пули
    public float moveSpeed = 5f; // Скорость движения

    public Text lifesText; // Ссылка на текстовое поле для отображения жизней
    private int lifes = 3; // Количество жизней
    public GameObject PauseMenu;


    void Start()
    {
        // Инициализируем текст с жизнями
        UpdateLifesText();
    }

    void Update()
    {
        // Управление движением вверх и вниз
        float verticalInput = Input.GetAxis("Vertical");   // Вверх/вниз
float horizontalInput = Input.GetAxis("Horizontal"); // Влево/вправо

Vector3 movement = new Vector3(horizontalInput, verticalInput, 0) * moveSpeed * Time.deltaTime;
transform.Translate(movement);

        // Проверяем нажатие на пробел для стрельбы
        if (Input.GetKeyDown(KeyCode.Space))
        {
            Shoot();
        }
    }

    void Shoot()
    {
        // Создаем пулю
        GameObject bullet = Instantiate(bulletPrefab, bulletSpawnPoint.position, Quaternion.identity);
        
        // Задаем скорость пули
        Rigidbody2D rb = bullet.GetComponent<Rigidbody2D>();
        rb.velocity = new Vector2(bulletSpeed, 0);
    }

    void OnTriggerEnter2D(Collider2D collision)
    {
        // Проверяем, если объект имеет тег "Asteroid" или "asteroid_mini"
        if (collision.CompareTag("Asteroid") || collision.CompareTag("asteroid_mini"))
        {
            // Уменьшаем количество жизней
            lifes--;

            // Обновляем текст жизней
            UpdateLifesText();

            // Если жизни закончились, останавливаем игру
            if (lifes <= 0)
            {
                GameOver();
            }
        }
    }

    void UpdateLifesText()
    {
        // Обновляем текст UI
        lifesText.text = "Lifes: " + lifes;
    }

    void GameOver()
    {
        // Останавливаем игру
        Debug.Log("Game Over!");
        PauseMenu.SetActive(true);
        Time.timeScale = 0; // Останавливает все действия в игре
    }
}
